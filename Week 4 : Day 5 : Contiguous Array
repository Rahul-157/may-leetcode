Given a binary array, find the maximum length of a contiguous subarray with equal number of 0 and 1.

Example 1:
Input: [0,1]
Output: 2
Explanation: [0, 1] is the longest contiguous subarray with equal number of 0 and 1.
Example 2:
Input: [0,1,0]
Output: 2
Explanation: [0, 1] (or [1, 0]) is a longest contiguous subarray with equal number of 0 and 1.
Note: The length of the given binary array will not exceed 50,000.




class Solution {
public:
    Solution(){
        std::ios::sync_with_stdio(false);
        std::cin.tie(nullptr);
        std::cout.tie(nullptr);
    }
    int findMaxLength(vector<int>& nums) {
        int l=nums.size();
       int has[2*l+1];
        int c=0,ans=0;
        for(int i=0;i<2*l+1;i++)
            has[i]=-2;
       
        has[l]=-1;
        for (int i=0;i<l;i++){
          c=c+(nums[i]?1:-1);
             if(has[l+c]!=-2)
            ans=max(ans,i-has[l+c]);
            else
            has[l+c]=i;
        }
        return ans;
    }
};
